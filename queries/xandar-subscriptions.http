# -*- restclient -*-
#
# Queries against the /xandar/subscriptions endpoints
#

# variables
:date := (shell-command-to-string "echo -n (date +%Y-%m-%d-%M-%s)")
:host = 127.0.0.1:8001
:path = xandar/subscriptions
:json = application/json

#
# Get all subscriptions
#
GET http://:host/:path?per_page=10

#
# Get all disabled subscriptions
#
GET http://:host/:path?per_page=10&where=(disabled eq true)&include=feedId,title,userId

#
# Get all enabled subscriptions
#
GET http://:host/:path?per_page=10&where=(disabled eq false)&include=feedId,title,userId,disabled

#
# Get a subscription by feed id
#
GET http://:host/:path?where=(feedId eq 56d7d88bc788cb1d6eb9199c)

#
# Get all subscriptions - sort & partial response
#
GET http://:host/:path?sort=title&include=title,uri,userId,feedId&page=4&per_page=10

#
# Get subscriptions created afte a date
#
GET http://:host/:path?where=(createdAt ge 2017-01-08T07:47:45.928Z)

#
# Get all subscriptions - pagination
#
GET http://:host/:path?page=4&per_page=5

#
# Get a single subscription
# feedId: 56d7df90c788cb1d6eb9277e
#
GET http://:host/:path/56d7df90c788cb1d6eb92789

#
# Get a single subscription using ETag
#
GET http://:host/:path/5869ec3e59841810dc000009
If-None-Match: ef19b2e0ce2baa83fa90abfa82a5141d4f18842d

#
# Delete a non-existent subscription
#
DELETE http://:host/:path/non-existent

#
# Delete an existent subscription
#
DELETE http://:host/:path/587ad5bd5984186b15000001 

#
# Create a single subscription
#
POST http://:host/:path
Content-Type: :json
{
  "createdAt": "2016-03-03T06:47:35.463Z",
  "disabled": false,
  "feedId": "56d7de07c788cb1d6eb91a6d",
  "tags": [
    "programming"
  ],
  "title": "All Confirmation Bias, All The Time - Aria Stewart",
  "updatedAt": "2016-03-03T07:05:56.533Z",
  "userId": "56d7cc3fccee17506699e735"
}

#
# Create multiple subscriptions
#
POST http://:host/:path
Content-Type: :json
[
  {
    "createdAt": "2016-03-03T06:47:15.372Z",
    "disabled": false,
    "feedId": "56d7ddf3c788cb1d6eb919b2",
    "tags": [],
    "title": "Aaron Franks",
    "updatedAt": "2016-03-03T06:47:15.373Z",
    "userId": "56d7cc3fccee17506699e735"
  },
  {
    "createdAt": "2016-03-03T06:47:17.288Z",
    "disabled": false,
    "feedId": "56d7ddf5c788cb1d6eb919c2",
    "tags": [
      "web-dev",
      "web-design",
      "ajax",
      "tech",
      "javascript"
    ],
    "title": "Ajaxian Â» Front Page",
    "updatedAt": "2016-03-13T18:23:47.055Z",
    "userId": "56d7cc3fccee17506699e735"
  },
  {
    "createdAt": "2016-03-03T06:47:20.652Z",
    "disabled": false,
    "feedId": "56d7ddf8c788cb1d6eb919d8",
    "tags": [],
    "title": "Allison Kaptur",
    "updatedAt": "2016-03-03T06:47:20.652Z",
    "userId": "56d7cc3fccee17506699e735"
  },
  {
    "createdAt": "2016-03-03T06:47:23.382Z",
    "disabled": false,
    "feedId": "56d7ddfbc788cb1d6eb919f1",
    "tags": [
      "front-end"
    ],
    "title": "An Innovative Web",
    "updatedAt": "2016-03-03T07:04:21.208Z",
    "userId": "56d7cc3fccee17506699e735"
  },
  {
    "createdAt": "2016-03-03T06:47:32.531Z",
    "disabled": false,
    "feedId": "56d7de03c788cb1d6eb91a07",
    "tags": [
      "database"
    ],
    "title": "Antirez",
    "unreadCount": 1,
    "updatedAt": "2016-03-03T07:01:10.950Z",
    "userId": "56d7cc3fccee17506699e735"
  }
]

#
# Replace a single subscription
#
PUT http://:host/:path/587a810d598418739b000001
Content-Type: :json
{
    "email": "replaced3@aol.com",
    "admin": true
}

#
# Modify a single subscription
#
PATCH http://:host/:path/587ad83859841886c7000003
Content-Type: :json
{
    "email": "updated3@aol.com"
}
