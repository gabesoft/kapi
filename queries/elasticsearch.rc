# -*- restclient -*-
#
# Elasticsearch queries against the dask index
#

# variables
:host = localhost:9200
:coll = post
:index1 = .prod-dask-rss-v1
:index2 = kapi-xandar

#
# Get version
#
GET http://:host

#
# Get cluster health
#
GET http://:host/_cluster/health?pretty

#
# Display all shards
#
GET http://:host/_cat/shards

#
# Verify index
#
GET http://:host/:index2

#
# Get all indices
#
GET http://:host/_cat/indices?v

#
# Get all mappings
#
GET http://:host/:index2/_all/_mapping

#
# Copy an index
#
POST http://:host/_reindex
{
  "source": {
    "index": ":index1"
  },
  "dest": {
    "index": ":index2"
  }
}

#
# Get all posts matching a query
#
GET http://:host/:index2/_search?q=title:haskell

#
# Index a document
#
PUT http://:host/:index2/:coll/1
{
  "post": {
    "summary": null,
    "image": null,
    "inlineStatus": null,
    "link": "https://www.reddit.com/r/haskell/comments/54niix/what_do_you_use_arithmoi_for/",
    "date": "2016-09-26T23:05:53.000Z",
    "guid": "t3_54niix",
    "author": "/u/Bodigrim",
    "comments": null,
    "title": "What do you use arithmoi for?",
    "description": "<!-- SC_OFF --><div class=\"md\"><p>I am the co-maintainer (with @cartazio) of <code>arithmoi</code>package (<a href=\"https://hackage.haskell.org/package/arithmoi\">https://hackage.haskell.org/package/arithmoi</a>), which provides utilities for number-theoretical computations. I am looking for areas to improve, and getting some feedback is invaluable for clear vision. </p><p>I'd be incredibly grateful for answers to the following questions.</p><p>What are you using <code>arithmoi</code> for? What are the main issues from the user's perspective? Which (number-theoretical) domains require better support?</p></div><!-- SC_ON -->   submitted by   <a href=\"https://www.reddit.com/user/Bodigrim\"> /u/Bodigrim </a><br/><span><a href=\"https://www.reddit.com/r/haskell/comments/54niix/what_do_you_use_arithmoi_for/\">[link]</a></span><span><a href=\"https://www.reddit.com/r/haskell/comments/54niix/what_do_you_use_arithmoi_for/\">[comments]</a></span>",
    "version": 0
  },
  "postId": "57e9f803d5ec56510904c9db",
  "subscriptionId": "57e9f803d5ec56510904c9f4",
  "feedId": "57e9f802d5ec56510904c9d9",
  "updatedAt": "2016-09-27T04:53:11.163Z",
  "createdAt": "2016-09-27T04:39:31.460Z",
  "userId": "56d7cc3fccee17506699e735",
  "title": "Haskell  Reddit",
  "tags": [
    "haskell",
    "reddit"
  ],
  "read": true
}

#
# Get a document by id
#
GET http://:host/:index2/:coll/2

#
# Get a document by _uid
#
GET http://:host/:index2/_search
{
  "query": {
    "ids": {
      "type": "post",
      "values": ["1", "2", "5"]
    }
  }
}

#
# Perform a search 1
#
GET http://:host/:index2/_search
{
  "size": 10,
  "from": 0,
  "query": {
    "bool": {
      "should": [
        {
          "match": {
            "post.title": {
              "query": "reader monad",
              "type": "phrase"
            }
          }
        }
      ]
    }
  },
  "track_scores": false
}

#
# Perform a search 2
#
GET http://:host/:index1/_search
{
  "size": 10,
  "from": 0,
  "query": {
    "bool": {
      "should": [
        {
          "match": {
            "post.title": {
              "query": "reader monad"
            }
          }
        }
      ]
    }
  },
  "track_scores": false
}

#
# Perform a search 3
#
GET http://:host/:index1/_search
{
  "query": {
    "bool": {
      "should": [
        {
          "match": {
            "post.title": "reader monad"
          }
        },
        {
          "match_phrase": {
            "post.description": {
              "query": "reader monad",
              "boost": 2
            }
          }
        }
      ]
    }
  }
}